# ****** CloudSim Simulation System Architecture Description File *******
# This file describes the system architecture of the datacenter network, for CloudSim simulation.

# Describes extendable element and the specific name of the extension to use. For example, if there
# is an extended datacenter broker to be used, this element describes the extension class.

# Definition file is open api3.
#
# Platform: If someone wants to use a standard existing scenario(Geo distributed datacenter
# network), but use custom extension points(provisioners, datacenters, etc), they can dynamically
# use the definition file. If someone wants to write a custom scenario, they need to write handlers
# for any new component introduced, generate DTOs, and write a scenario manager for the new scenario.
# And define in the definition file. They do not need to implement the scenario as a whole in java
# because the low code simulation has modularized the simulation scenario process.
openapi: "3.0.0"
info:
  description: "CloudSim Express: Low code simulation service"
  version: "0.1.0"
  title: "CloudSim Express: Low code simulation"
  license:
    name: "gpl-3.0"
    url: "https://www.gnu.org/licenses/gpl-3.0.en.html"
paths:
  /simulate:
    post:
      description: ""
      responses:
        "501":
          description: "Not Implemented"
components:
  schemas:
    GlobalDatacenterNetwork:
      type: object
      properties:
        zoneCount:
          type: integer
        interZoneNetworkDescriptionFilePath:
          type: string
        zones:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
    Zone:
      type: object
      properties:
        name:
          type: string
        datacenter:
          $ref: '#/components/schemas/Datacenter'
        broker:
          $ref: '#/components/schemas/Broker'
        workloadGenerator:
          $ref: '#/components/schemas/WorkloadGenerator'
    Broker:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        name:
          type: string
    WorkloadGenerator:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
    Datacenter:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        characteristics:
          $ref: '#/components/schemas/DatacenterCharacteristics'
        vmAllocationPolicy:
          $ref: '#/components/schemas/Extension'
        storage:
          type: string
        schedulingInterval:
          type: integer
        name:
          type: string
    Host:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        id:
          type: integer
        ramProvisioner:
          $ref: '#/components/schemas/Extension'
        bwProvisioner:
          $ref: '#/components/schemas/Extension'
        storage:
          type: integer
        processingElementList:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingElement'
        vmScheduler:
          $ref: '#/components/schemas/Extension'
    ProcessingElement:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        id:
          type: string
        processingElementProvisioner:
          $ref: '#/components/schemas/ProcessingElementProvisioner'
    ProcessingElementProvisioner:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        mips:
          type: double
    DatacenterCharacteristics:
      type: object
      properties:
        arch:
          type: string
        os:
          type: string
        vmm:
          type: string
        timeZone:
          type: double
        cost:
          type: double
        costPerMemory:
          type: double
        costPerStorage:
          type: double
        costPerBandwidth:
          type: double
        hostList:
          type: array
          items:
            $ref: '#/components/schemas/Host'
    Extension:
      type: object
      properties:
        className:
          type: string
        copies:
          type: integer
        extensionProperties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
    Property:
      type: object
      properties:
        key:
          type: string
        value:
          type: string