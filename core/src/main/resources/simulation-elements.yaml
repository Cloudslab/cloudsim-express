openapi: "3.0.0"
info:
  title: "Building Blocks for CloudSim Express"
  description: "This document provides schema definitions for simulation components. For example, it defines a global
   datacenter network, which has a set of zones, and an inter-zone network. It then continues to define rest of the 
   components of global datacenter network in a top-down approach, such as a zone made up with a broker and a 
   datacenter, etc. The definitions in this document are available for CloudSim Express users to script their scenarios.
   Concretely, if the user A designs a datacenter network with five zones, and the user B designs a datacenter network
   with three zones, both these users can use the global datacenter network component definition. For a specific 
   component that is not present with CloudSim Express, can be easily added by defining its schematic in this document."
  version: "0.1-SNAPSHOT"
  license:
    name: "gpl-3.0"
    url: "https://www.gnu.org/licenses/gpl-3.0.en.html"
paths:
  /simulate:
    post:
      description: ""
      responses:
        "501":
          description: "Not Implemented"
components:
  schemas:
    GlobalDatacenterNetwork:
      type: object
      properties:
        zoneCount:
          type: integer
        interZoneNetworkDescriptionFilePath:
          type: string
        zones:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
    Zone:
      type: object
      properties:
        name:
          type: string
        datacenter:
          $ref: '#/components/schemas/Datacenter'
        broker:
          $ref: '#/components/schemas/Broker'
        workloadGenerator:
          $ref: '#/components/schemas/WorkloadGenerator'
    Broker:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        name:
          type: string
    WorkloadGenerator:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
    Datacenter:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        characteristics:
          $ref: '#/components/schemas/DatacenterCharacteristics'
        vmAllocationPolicy:
          $ref: '#/components/schemas/Extension'
        storage:
          type: string
        schedulingInterval:
          type: integer
        name:
          type: string
    Host:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        id:
          type: integer
        ramProvisioner:
          $ref: '#/components/schemas/Extension'
        bwProvisioner:
          $ref: '#/components/schemas/Extension'
        storage:
          type: integer
        processingElementList:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingElement'
        vmScheduler:
          $ref: '#/components/schemas/Extension'
    ProcessingElement:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        id:
          type: string
        processingElementProvisioner:
          $ref: '#/components/schemas/ProcessingElementProvisioner'
    ProcessingElementProvisioner:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Extension'
        mips:
          type: double
    DatacenterCharacteristics:
      type: object
      properties:
        arch:
          type: string
        os:
          type: string
        vmm:
          type: string
        timeZone:
          type: double
        cost:
          type: double
        costPerMemory:
          type: double
        costPerStorage:
          type: double
        costPerBandwidth:
          type: double
        hostList:
          type: array
          items:
            $ref: '#/components/schemas/Host'
    Extension:
      type: object
      properties:
        className:
          type: string
        copies:
          type: integer
        extensionProperties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
    Property:
      type: object
      properties:
        key:
          type: string
        value:
          type: string